<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>小马哥的博客</title><link>https://majinghe.github.io/</link><description>Recent content on 小马哥的博客</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><lastBuildDate>Sun, 05 Oct 2025 09:05:42 +0800</lastBuildDate><atom:link href="https://majinghe.github.io/index.xml" rel="self" type="application/rss+xml"/><item><title>用 Terraform 操作 RustFS 资源，让对象存储 IaC 化</title><link>https://majinghe.github.io/cloud-native/iac-rustfs/</link><pubDate>Sun, 05 Oct 2025 09:05:42 +0800</pubDate><guid>https://majinghe.github.io/cloud-native/iac-rustfs/</guid><description>IaC（基础设施即代码）是云原生时代的重要技术栈，通过将基础设施代码化来简化基础设施的管理，而且有助于 GitOps 的实践。RustFS 作为存储领域的基</description></item><item><title>Dify + RustFS + Milvus，构建文档多语种翻译 AI Workflow</title><link>https://majinghe.github.io/aigc/dify/</link><pubDate>Fri, 03 Oct 2025 09:05:42 +0800</pubDate><guid>https://majinghe.github.io/aigc/dify/</guid><description>本文利用 Dify + RustFS + Milvus 搭建一个文档的多语言翻译 workflow，实现将将中文文档同时翻译为英语、日语、俄语、韩语（如果想要，可以随意加）。有了 A</description></item><item><title>Milvus + RustFS + Vibe Coding，快速 DIY 一个 Chatbot</title><link>https://majinghe.github.io/aigc/milvus/</link><pubDate>Sat, 20 Sep 2025 09:05:42 +0800</pubDate><guid>https://majinghe.github.io/aigc/milvus/</guid><description>偶然点开了 milvus 的文档，想看一下 milvus 的安装使用，看到 milvus 支持 docker compose 安装以及将对象存储作为后端存储来实现存算分离，正好之前扩展 RustFS MCP 的时候，了解到 RustFS 是新一</description></item><item><title>在 k3s 上部署新一代高性能分布式存储 RustFS</title><link>https://majinghe.github.io/cloud-native/rustfs-k3s/</link><pubDate>Tue, 16 Sep 2025 13:05:42 +0800</pubDate><guid>https://majinghe.github.io/cloud-native/rustfs-k3s/</guid><description>关于 RustFS 在新一代对象存储 RustFS 的 MCP 扩展实践中，介绍了 RustFS，它是一个用 Rust 编写的开源分布式存储系统，完全兼容 S3。支持多种安装方式：源码编译、</description></item><item><title>新一代对象存储 RustFS 的 MCP 扩展实践</title><link>https://majinghe.github.io/aigc/rustfs-mcp/</link><pubDate>Sat, 16 Aug 2025 13:05:42 +0800</pubDate><guid>https://majinghe.github.io/aigc/rustfs-mcp/</guid><description>关于 RustFS RustFS 是用 Rust 编写的新一代高性能对象存储，完全兼容 S3，是 MinIO 的国产平替。RustFS 是开源的，采用 Apache 2.0 许可证。目前在 GitHub 上开源不到两个月，已经</description></item><item><title>Anthropic 归档了众多当初发布的 MCP Server，究竟为何？</title><link>https://majinghe.github.io/aigc/mcp-archive/</link><pubDate>Tue, 10 Jun 2025 10:05:42 +0800</pubDate><guid>https://majinghe.github.io/aigc/mcp-archive/</guid><description>之前研究 MCP 的时候，发现了 Anthropic 官方 GitHub repo 中有一些 MCP Server，还自行对 GitLab、Git 进行了扩展（Git 扩展代码还提了 PR）。今天再次查看这</description></item><item><title>Git MCP Server，动动嘴来操作 Git 仓库</title><link>https://majinghe.github.io/aigc/mcp-git-server/</link><pubDate>Sun, 18 May 2025 10:05:42 +0800</pubDate><guid>https://majinghe.github.io/aigc/mcp-git-server/</guid><description>在之前的文章GitLab MCP Server tools 功能扩展实战中提到了，Anthropic 在发布 MCP 的时候发布了一些开箱即用的 MCP Server，而 mcp-server-git 就是其中一个，目</description></item><item><title>MCP、A2A 之外，AI 领域又新增一协议-AG-UI</title><link>https://majinghe.github.io/aigc/ag-ui/</link><pubDate>Thu, 15 May 2025 10:05:42 +0800</pubDate><guid>https://majinghe.github.io/aigc/ag-ui/</guid><description>什么是 AG-UI AG-UI（Agent User Interaction Protocol，智能体用户交互协议） 是一个开放的、轻量的、基于事件的协议，由 CopilotKit 公司发布，它通过标准 HTTP 或可</description></item><item><title>图解 LLM（大语言模型）的工作原理</title><link>https://majinghe.github.io/aigc/llm-work/</link><pubDate>Fri, 09 May 2025 10:05:42 +0800</pubDate><guid>https://majinghe.github.io/aigc/llm-work/</guid><description>最近在 x 上看到 Akshay 分享的一组图解 LLM 工作原理的帖子，感觉内容通俗易懂，就搬运过来汉化一下，方便大家一起学习！ Akshay 是一位 AI/ML 工程师，他在 x 上的介绍如下</description></item><item><title>GitLab MCP Server tools 功能扩展实战</title><link>https://majinghe.github.io/aigc/mcp-gitlab/</link><pubDate>Thu, 01 May 2025 10:05:42 +0800</pubDate><guid>https://majinghe.github.io/aigc/mcp-gitlab/</guid><description>Anthropic 发布 MCP 的时候，在 GitHub 上发布了一些 MCP Server，比如 git、filesystem、redis 等。GitLab MCP Server 也是其中的一个，主要用来通过</description></item><item><title>Docker 发布 MCP Catalog &amp; ToolKit，意欲打造 MCP 单一可信源？</title><link>https://majinghe.github.io/aigc/mcp-docker/</link><pubDate>Thu, 24 Apr 2025 13:05:42 +0800</pubDate><guid>https://majinghe.github.io/aigc/mcp-docker/</guid><description>4 月 22 日，Docker 正式宣布开启 Docker MCP Catalog and Toolkit 计划，官宣的完整内容通过名为 《Dockerizing MCP – Bringing Discovery, Simplicity, and Trust to the Ecosystem》的博客</description></item><item><title>z-library + calibre，让落灰的 kindle 重见天日</title><link>https://majinghe.github.io/suibi/kindle/</link><pubDate>Thu, 23 Jan 2025 13:05:42 +0800</pubDate><guid>https://majinghe.github.io/suibi/kindle/</guid><description>最近这段时间一直在用微信读书看一些关于芯片、经济方面的书籍，时间长了感觉微信读书有两个不甚方便的地方： 眼睛难受。每天对着电脑就已经感觉眼睛比</description></item><item><title>Deepseek vs ChatGPT vs Gemini，2025 年 DevSecOps 的十大趋势</title><link>https://majinghe.github.io/aigc/deepseek-vs-chatgpt/</link><pubDate>Sat, 17 Feb 2024 13:05:42 +0800</pubDate><guid>https://majinghe.github.io/aigc/deepseek-vs-chatgpt/</guid><description>最近想看一下 AI 工具预测 DevSecOps 发展趋势的结果是什么，于是选择了 Deepseek、ChatGPT、Gemini 三款产品，使用了如下提示词： 1 假设您是</description></item><item><title>k3s x GitLab Runner Operator，GitLab CI 云原生构建新体验</title><link>https://majinghe.github.io/cloud-native/k3s-gitlab-runner/</link><pubDate>Sat, 20 Jan 2024 13:05:42 +0800</pubDate><guid>https://majinghe.github.io/cloud-native/k3s-gitlab-runner/</guid><description>GitLab CI 是非常常用的一款 CI/CD 工具，只需要在 .gitlab-ci.yml 文件中用 YAML 语法编写 CI/CD 流水线即可。而 GitLab CI 能够运行的关键组件是 GitLab Runner。GitLab Runner 是一个轻量级、</description></item><item><title>2023 AI 领域的 100 件大事</title><link>https://majinghe.github.io/aigc/2023-ai-top-100/</link><pubDate>Tue, 16 Jan 2024 13:05:42 +0800</pubDate><guid>https://majinghe.github.io/aigc/2023-ai-top-100/</guid><description>自从 2022 年末 ChatGPT 横空出世以来，AIGC 发展的热浪一浪接一浪。The Rundown AI 的作者整理了 2023 年发生在 AI 领域的 100 件大事。原文链接 https://www.t</description></item><item><title>从 GOTC 看开源软件供应链安全发展</title><link>https://majinghe.github.io/devsecops/gotc-2023/</link><pubDate>Thu, 08 Jun 2023 13:05:42 +0800</pubDate><guid>https://majinghe.github.io/devsecops/gotc-2023/</guid><description>GOTC 结束快两周了，写一点迟到的参会体验。 这是我第二次参加 GOTC，上一次是 2021 年，同样是在上海，和 WAIC（世界人工智能大会）在同一个会场，很多</description></item><item><title>使用 Policy Controller 实现签名镜像在 Kubernetes 集群上的部署</title><link>https://majinghe.github.io/devsecops/policy-controller/</link><pubDate>Thu, 27 Apr 2023 13:05:42 +0800</pubDate><guid>https://majinghe.github.io/devsecops/policy-controller/</guid><description>之前的文章中写了用 cosign 对于容器镜像进行签名和验证，避免容器镜像被篡改。而如何确保只有被签名的镜像才能被部署到 Kubernetes 集群上呢？ 答案就是：Policy</description></item><item><title>Tekton 从 CDF 毕业了！！！</title><link>https://majinghe.github.io/devsecops/tekton-graduation/</link><pubDate>Fri, 04 Nov 2022 13:05:42 +0800</pubDate><guid>https://majinghe.github.io/devsecops/tekton-graduation/</guid><description>本文翻译自 tekton 官网 blog：Tekton Graduation。作者 Andrea Frittoli。已经获得了原作者的翻译许可。 我们非常高兴地宣布 Tekton 在持续交</description></item><item><title>gitsign，一种keyless 的方式来对 git commit 进行签名验证</title><link>https://majinghe.github.io/devsecops/gitsign/</link><pubDate>Tue, 11 Oct 2022 13:05:42 +0800</pubDate><guid>https://majinghe.github.io/devsecops/gitsign/</guid><description>为何要进行 commit/tag 签名 对于 commit/tag 签名，可能大家的直观感受就是 GitHub 上一个绿色的 Verified 标志： 至于为什么需要对 git commit/tag 进行签名的原因一言以蔽之就是：证明代码的提交来自</description></item><item><title>使用 ChartMuseum 构建私有的 Helm Chart Registry</title><link>https://majinghe.github.io/cloud-native/chartmuseum/</link><pubDate>Sun, 24 Jul 2022 13:05:42 +0800</pubDate><guid>https://majinghe.github.io/cloud-native/chartmuseum/</guid><description>关于 ChartMuseum ChartMuseum 是一个用 Go 语言写的开源的 Helm Chart Repository 服务器，目前支持多种云存储后端，诸如 Google Cloud Storage、Alibaba Cloud OSS Storage、Minio 以</description></item><item><title>使用 KICS 来保障基础设施即代码（IaC）的安全</title><link>https://majinghe.github.io/devsecops/kics/</link><pubDate>Thu, 21 Jul 2022 13:05:42 +0800</pubDate><guid>https://majinghe.github.io/devsecops/kics/</guid><description>关于 KICS KICS 是 Keeping Infrastructure as Code Secure 的缩写，是一个开源项目，主要用来在开发早期发现基础设施即代码中的一些安全漏洞、合规问题以及错误配置等。目前支持多种平台，</description></item><item><title>使用 cosign 来签名和验证 OCI 镜像，并和 Tekton CI/CD 集成</title><link>https://majinghe.github.io/devsecops/cosign/</link><pubDate>Fri, 06 May 2022 13:05:42 +0800</pubDate><guid>https://majinghe.github.io/devsecops/cosign/</guid><description>关于 cosign cosign 是 sigstore 项目的一部分，也是一个开源项目，主要用来对 OCI 镜像进行签名和验证，从而让签名成为一种无形的基础设施。cosign 目前支持以下几种签</description></item><item><title>与云原生持续交付相关的一些开源项目</title><link>https://majinghe.github.io/cloud-native/continuous-delivery/</link><pubDate>Sun, 01 May 2022 13:05:42 +0800</pubDate><guid>https://majinghe.github.io/cloud-native/continuous-delivery/</guid><description>CNCF 中与持续交付相关的项目 CNCF 中目前托管有 118 个项目，16 个已经毕业的项目，34 个正在孵化的项目以及 58 个处于沙箱的项目。下面会梳理一下与持续交付相</description></item><item><title>ArgoCD + Kustomize + Sops，以更安全的方式实践 GitOps</title><link>https://majinghe.github.io/cloud-native/argocd-kustomize-sops/</link><pubDate>Sat, 16 Apr 2022 13:05:42 +0800</pubDate><guid>https://majinghe.github.io/cloud-native/argocd-kustomize-sops/</guid><description>GitOps GitOps 是 2017 年由 weaveworks 公司根据自身实践经验提出的一种云原生应用程序（其实也包括基础设施）部署与管理的模式。其区别于传统的基于 Push 的应用程序部署模式，而</description></item><item><title>用 Tekton 来生成软件物料清单（SBOM）</title><link>https://majinghe.github.io/devsecops/tekton-generate-sbom/</link><pubDate>Tue, 08 Feb 2022 13:05:42 +0800</pubDate><guid>https://majinghe.github.io/devsecops/tekton-generate-sbom/</guid><description>近期 Linux 基金会发布了《软件物料清单（SBOM）与网络安全可读性》报告，里面介绍了软件物料清单（以下统称为 SBOM）在现在企业中的使用情况。可以</description></item><item><title>《软件物料清单与网络安全可读性》调研报告解读</title><link>https://majinghe.github.io/devsecops/sbom-report/</link><pubDate>Mon, 07 Feb 2022 10:05:42 +0800</pubDate><guid>https://majinghe.github.io/devsecops/sbom-report/</guid><description>Linux 基金会在 2021 年第三季度在全球范围内发起了一个关于企业或组织采用 SBOM 的调研，最近发布了题为《Software Bill of Materials(SBOM) and Cybersecrity Readiness》的报告</description></item><item><title>用 Tekton 来检测 Apache Log4j 漏洞</title><link>https://majinghe.github.io/devsecops/tekton-log4j2/</link><pubDate>Sat, 25 Dec 2021 13:05:42 +0800</pubDate><guid>https://majinghe.github.io/devsecops/tekton-log4j2/</guid><description>关于 Apache Log4j 漏洞 log4j 漏洞在 2021 年的最后一个月掀起了很大的风波，由于 log4j 被广泛应用于 java 项目中，因此众多 java 小伙伴也是在加班加点应对。由于 log4j 在不断的爆发出新</description></item><item><title>Tekton Chains 是如何保证 Tekton 供应链安全的</title><link>https://majinghe.github.io/cloud-native/tekton-supply-chain/</link><pubDate>Sat, 18 Dec 2021 13:05:42 +0800</pubDate><guid>https://majinghe.github.io/cloud-native/tekton-supply-chain/</guid><description>关于 Tekton Chain Tekton Chain 是一个 Kubernetes CRD controller，可以用来帮助用户管理 Tekton 的 supply chain security（供应链安全）。简单点说，就是更安全的获取 CI/CD Pipeline 执行的</description></item><item><title>使用 shipwright 在 Kubernetes 上构建容器镜像</title><link>https://majinghe.github.io/cloud-native/shipwright/</link><pubDate>Tue, 16 Nov 2021 13:05:42 +0800</pubDate><guid>https://majinghe.github.io/cloud-native/shipwright/</guid><description>Shipwright 介绍 Shipwright 是一个可扩张的框架，用来在 Kubernetes 上构建容器镜像。Shipwright 支持众多流行的用于构建容器镜像的工具，比如 Kaniko、Cloud Native</description></item><item><title>从 Anchore 软件供应链安全报告深挖 SBOM &amp; SPDX</title><link>https://majinghe.github.io/devsecops/sbom/</link><pubDate>Thu, 28 Oct 2021 13:05:42 +0800</pubDate><guid>https://majinghe.github.io/devsecops/sbom/</guid><description>Anchore 软件供应链安全报告解读 Anchore是一家关注软件供应链安全的安全厂商，其旗下有好几款关于安全的开源项目，比如Syft、Grype。其在六</description></item><item><title>GOTC 纪实｜利用 Tekton + ArgoCD 打造云原生 GitSecOps</title><link>https://majinghe.github.io/devsecops/gitops/</link><pubDate>Tue, 13 Jul 2021 13:05:42 +0800</pubDate><guid>https://majinghe.github.io/devsecops/gitops/</guid><description>我有幸参加了 2021 年 7.9—7.10 在上海举行的 GOTC（全球开源技术大会）并以利用 Tekton + ArgoCD 打造云原生 GitSecOps为题做了分享。下面是分享的</description></item><item><title>Jenkins Operator —— Jenkins 在 Kubernetes 上打开的正确方式</title><link>https://majinghe.github.io/cloud-native/jenkins-operator/</link><pubDate>Thu, 01 Apr 2021 13:05:42 +0800</pubDate><guid>https://majinghe.github.io/cloud-native/jenkins-operator/</guid><description>入门篇：jenkins-operator 的介绍及安装 前言 Operator 是 Kubernetes 的一种扩展机制，用户可以利用这种扩展机制来让自己的应用以 Kubernetes native（k8s</description></item><item><title>Kubernetes secrets 加密的几种方式</title><link>https://majinghe.github.io/devsecops/secret-encrypt/</link><pubDate>Fri, 05 Feb 2021 13:05:42 +0800</pubDate><guid>https://majinghe.github.io/devsecops/secret-encrypt/</guid><description>前言 Kubernetes 已经毫无争议的成为了云原生时代的事实标准，在 Kubernetes 上部署应用程序也变得简单起来（无论是采用 kustomize 还是 helm），虽然对于敏感信息（比如用户名、</description></item><item><title>2021 年 DevOps 的八大趋势</title><link>https://majinghe.github.io/devsecops/devops-trend-2021/</link><pubDate>Sat, 19 Dec 2020 13:05:42 +0800</pubDate><guid>https://majinghe.github.io/devsecops/devops-trend-2021/</guid><description>2020 年即将即将结束，也到了预测一下 DevOps 在来年的一些发展于变化。本文先看看别人的预测，最后我自己也凭借自己在 DevOps 领域这几年的经验和认知，也大胆预测一</description></item><item><title/><link>https://majinghe.github.io/aigc/mcp-k8s/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://majinghe.github.io/aigc/mcp-k8s/</guid><description>1 2 3 4 5 6 7 8 9 10 11 12 13 14 kind create cluster -n mcp-show Creating cluster &amp;#34;mcp-show&amp;#34; ... ✓ Ensuring node image (kindest/node:v1.32.2) 🖼 ✓ Preparing nodes 📦 ✓ Writing configuration 📜 ✓ Starting control-plane 🕹️ ✓ Installing CNI 🔌 ✓ Installing StorageClass 💾 Set kubectl context to &amp;#34;kind-mcp-show&amp;#34; You can now use your cluster with: kubectl cluster-info --context kind-mcp-show Have a question, bug, or feature request?</description></item><item><title/><link>https://majinghe.github.io/cloud-native/jh-runner-ts/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://majinghe.github.io/cloud-native/jh-runner-ts/</guid><description>WARNING: Checking for jobs&amp;hellip; failed runner=nsHMNjVNj status=couldn&amp;rsquo;t execute POST against https://jhma.jihulab.net/api/v4/jobs/request: Post &amp;ldquo;https://jhma.jihulab.net/api/v4/jobs/request&amp;quot;: tls: failed to verify certificate: x509: certificate relies on legacy Common Name field, use SANs instead WARNING: Checking for jobs&amp;hellip; failed runner=nsHMNjVNj status=couldn&amp;rsquo;t execute POST against https://jhma.jihulab.net/api/v4/jobs/request: Post &amp;ldquo;https://jhma.jihulab.net/api/v4/jobs/request&amp;quot;: tls: failed to verify certificate: x509: certificate relies on legacy Common Name field, use SANs instead WARNING: Checking for jobs&amp;hellip; failed runner=nsHMNjVNj status=couldn&amp;rsquo;t execute POST against https://jhma.jihulab.net/api/v4/jobs/request: Post &amp;ldquo;https://jhma.</description></item></channel></rss>